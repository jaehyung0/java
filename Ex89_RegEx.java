package com.test.java;

public class Ex89_RegEx {

	public static void main(String[] args) {
		
		/*
		 * 정규 표현식, Regular Expression
		 * -정규식
		 * -문자열을 검색한다.
		 * -문자열을 대상으로 찾고자 하는 패턴을 가지는 문자열을 검색한다.
		 * -자바와 상관없는 독립적인 표현식
		 * -자바에서 정규 표현식을 지원하는 클래스가 제공된다.
		 * 
		 * Ctrl + F > Find Text
		 * 
		 * 텍스트 > '홍길동' 검색(추출)
		 * 텍스트 > 전화번호만 검색(추출) > 사용자 경험 + 전화번호 패턴(규칙)
		 * 텍스트 > 이메일 주소만 검색(추출) > 이메일 주소 패턴(규칙) : 아이디@도메인
		 * 
		 * 
		 * 정규 포현식 문법(구성 요소)
		 * 
		 * 1. 모든 문자
		 * - 우리가 사용하는 모든 문자
		 * ex) 홍길동
		 * 
		 * 2. 모든 문자
		 * - .
		 * - 한(1) 문자 -> 와일드카드
		 * ex) a.b -> aab abb acb akb a1b 등등 다 찾아줌  a와b사이에 한글자가 있는 것을 다 찾아준다.
		 * ex) ..b -> rrb 34b 가거b 노노b ㅅ수b erb
		 * 
		 * 
		 * [앞의 요소의 출현 횟수 지정]\
		 * 3. ?
		 * - 출현횟수:0~1
		 * - 생략 가능, 중복 불가
		 * ex) abc -> bc,abd,bcd,abcd
		 * ex) 저는 홍길동 입니다. 그래? 길동아 안녕~
		 * 
		 * 4. +
		 * -출현횟수: 1~무한대
		 * -생략 불가능, 중복가능
		 * ex) a+bc -> bc,abc,aabc,aaabc,aaaaaaaaaabc,aaaaaaaaaaaaaaaaaaabbc
		 * 
		 * 5. *
		 * -출현횟수: 0~무한대
		 * -생략가능, 중복가능
		 * 
		 * 
		 * 6. 
		 * 
		 * 7. |
		 * -choice
		 * ex) (A|B|C)D -> D, AD,BD,CD,ABCD
		 * ex) (홍길동|아무개|테스트) 입니다.
		 * 		홍길동입니다.
		 * 		아무개입니다.
		 * 		테스트입니다.
		 * 		관리자입니다.
		 *		홍길동입니다. 
		 * ex) (홍길동|아무개|테스트)? 입니다.
		 * 		홍길동입니다.
		 * 		아무개입니다.
		 * 		테스트입니다.
		 * 		관리자입니다.
		 *		홍길동입니다. 
		 *
		 *[앞의 요소의 출현 횟수 지정]
		 *-0,1,무한대
		 *-?,+,*
		 *-특정 횟수 지정
		 *
		 *8. {n}
		 *-n: 1이상 정수, 앞의 요소의 출현횟수
		 *ex) a{3}bc -> bc, abc, aabc, aaabc, aaaabc
		 *ex) (ab){2}cd -> abcd, ababcd, abababcd
		 *ex) (김|이|박|최|정)길동 -> 김길동, 홍길동, 최길동
		 *ex) (김|이|박|최|정){2}길동 -> 김김길동, 김길동, 홍길동, 최박길동
		 *
		 *9.{n,m}
		 *-n:최소출현횟수
		 *-m:최대출현횟수
		 *
		 *10.{n,}
		 *-n:최소 출현 횟수
		 *-최대: 무한대
		 *ex) a{1,}bc ->bc, abc, aabc, aaabc, aaaabc
		 *ex) a+bc -> bc, abc, aabc, aaabc, aaaabc
		 *ex)a{3,}bc-> aaabc, aaaabc
		 *
		 *[요소의  범위 그룹 + 선택]
		 *11. [요소 나열]
		 *- []안에 나열된 요소중 하나를 선택
		 *- choice
		 *ex) (a|b|c)de -> ade, bde, cde
		 *ex) [abc]de -> ade, bde, cde
		 *
		 *
		 *ex) 주민등록번호 추출
		 *[0123456798]{6}-[0123456789]{7}
		 *
		 *ex) 영어 단어 +4~7단어
		 *[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ]{4,7}
		 *
		 *
		 *12.[^요소나열]
		 *-나열된 요소를 빼고 나머지들 중 선택
		 *
		 *13. 공백
		 *- \s
		 *-공백 문자 검색(스페이스, 개행, 탭)
		 *ex) 안녕\s?하세요 -> 안녕하세요. 안녕 하세요
		 *	  홍\s{0,1}길동 -> 홍길동, 홍 길동
		 *
		 *14. 줄임
		 *- [0123456789] > [0-9] > \d
		 *ex) 010-[0-9]{3,4}-[0-9]{4}
		 *    010-\d{3,4}-\d{4}
		 *    
		 *    -[A-Za-z0-9_] > \w
		 *    
		 *    -	  반대
		 *    \s <-> \S
		 *    \d <-> \D
		 *    \w <-> \W
		 *    
		 *15. ^
		 *	-대상 문자열이 반드시 ^ 뒤의 요소로 시작해야한다.
		 *	-자바의 startsWith() 메소드와 동일
		 *	ex) ^abc -> abc(o), test(x), tbc(x) abctest(o)
		 *
		 *16. $
		 *- 대상 문자열이 반드시 $ 뒤의 요소로 끝나야한다.
		 *- 자바의 endsWith() 메소드와 동일
		 * ex) abc$ -> abc(o), test(x), testabc(o)
		 *
		 *
		 *
		 *
		 *정규식에서 문자 이스케이프
		 *홍\.동 -> 홍.동 홍길동 홍가동
		 *
		 *(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?
		 *
		 *http://naver.com
		 */
	}
}
